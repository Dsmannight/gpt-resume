{"ast":null,"code":"var _jsxFileName = \"/Users/santiagohernandez/resume/resume-website/src/chat/ChatPage.js\",\n  _s = $RefreshSig$();\nimport { useState } from \"react\";\nimport { URL } from \"../constants\";\nimport \"./ChatPage.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ChatPage = () => {\n  _s();\n  const [input, setInput] = useState(\"\");\n  const [returnMessage, setReturnMessage] = useState(\"\");\n  const [talking, setTalking] = useState(false);\n  const [messages, setMessages] = useState([]);\n  const handleSend = async () => {\n    if (input.trim() !== '') {\n      setMessages(prevMessage => [...prevMessage, {\n        role: \"user\",\n        content: input\n      }]);\n      setReturnMessage(\"\");\n      setTalking(true);\n      let current_messages = [...messages, {\n        role: \"user\",\n        content: input\n      }]; // Make current message usable to send\n      setInput('');\n\n      // Stream AI's message\n      const response = await fetch(`${URL}/api/talk`, {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          Body: current_messages\n        })\n      });\n      const reader = response.body.getReader();\n      let incomingText = \"\";\n      while (true) {\n        const {\n          done,\n          value\n        } = await reader.read();\n        if (done) break;\n        const messages = new TextDecoder('utf-8').decode(value);\n        incomingText += messages;\n        setReturnMessage(incomingText);\n      }\n      setMessages(prevMessage => [...prevMessage, {\n        role: \"system\",\n        content: incomingText\n      }]);\n      setTalking(false);\n    }\n    return;\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"chat-interface\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"img-container\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: `skull-head-${talking === false ? \"close\" : \"open\"}`\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 15\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"return-message\",\n      children: returnMessage\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 15\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"chat-send-form\",\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        className: \"chat-input\",\n        type: \"text\",\n        value: input,\n        placeholder: \"Ask away...\",\n        onChange: e => setInput(e.target.value),\n        onKeyPress: e => e.key === 'Enter' ? handleSend() : null\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 19\n      }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n        className: \"send-button \"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 19\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 15\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 45,\n    columnNumber: 11\n  }, this);\n};\n_s(ChatPage, \"YmcM/OxG/ezL3YLuAoJi8HoIV5s=\");\n_c = ChatPage;\nexport default ChatPage;\nvar _c;\n$RefreshReg$(_c, \"ChatPage\");","map":{"version":3,"names":["useState","URL","jsxDEV","_jsxDEV","ChatPage","_s","input","setInput","returnMessage","setReturnMessage","talking","setTalking","messages","setMessages","handleSend","trim","prevMessage","role","content","current_messages","response","fetch","method","headers","body","JSON","stringify","Body","reader","getReader","incomingText","done","value","read","TextDecoder","decode","className","children","fileName","_jsxFileName","lineNumber","columnNumber","type","placeholder","onChange","e","target","onKeyPress","key","_c","$RefreshReg$"],"sources":["/Users/santiagohernandez/resume/resume-website/src/chat/ChatPage.js"],"sourcesContent":["import { useState } from \"react\"\nimport { URL } from \"../constants\"\nimport \"./ChatPage.css\"\n\nconst ChatPage = () => {\n    const [input, setInput] = useState(\"\")\n    const [returnMessage, setReturnMessage] = useState(\"\")\n    const [talking, setTalking] = useState(false)\n    const [messages, setMessages] = useState([])\n\n    const handleSend = async () => {        \n        if (input.trim() !== '') {\n          setMessages(prevMessage => [...prevMessage, {role: \"user\", content: input}])\n          setReturnMessage(\"\")\n          setTalking(true)\n          let current_messages = [...messages, {role: \"user\", content: input}] // Make current message usable to send\n          setInput('');\n          \n          // Stream AI's message\n          const response = await fetch(`${URL}/api/talk`, {\n            method: 'POST',\n            headers: {\n              'Content-Type': 'application/json',\n            },\n            body: JSON.stringify({\n              Body: current_messages\n            }),\n          })\n          const reader = response.body.getReader();\n          let incomingText = \"\"\n          while (true) {\n            const { done, value } = await reader.read();\n            if (done) break;\n            const messages = new TextDecoder('utf-8').decode(value);\n            incomingText += messages\n            setReturnMessage(incomingText)\n          }\n          setMessages(prevMessage => [...prevMessage, {role: \"system\", content: incomingText}])\n          setTalking(false);\n        }\n        return\n      }\n\n    return(\n          <div className=\"chat-interface\">\n              <div className=\"img-container\">\n                <div className={`skull-head-${talking === false ? \"close\" : \"open\"}`}></div>\n              </div>\n              <div className=\"return-message\">\n                  {returnMessage}\n              </div>\n              <div className=\"chat-send-form\">\n                  <input className=\"chat-input\"\n                      type=\"text\"\n                      value={input}\n                      placeholder=\"Ask away...\"\n                      onChange={e => setInput(e.target.value)}\n                      onKeyPress={e => e.key === 'Enter' ? handleSend() : null}\n                  />\n                  <span className=\"send-button \"></span>\n              </div>\n          </div>\n    )\n}\nexport default ChatPage;"],"mappings":";;AAAA,SAASA,QAAQ,QAAQ,OAAO;AAChC,SAASC,GAAG,QAAQ,cAAc;AAClC,OAAO,gBAAgB;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAEvB,MAAMC,QAAQ,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACnB,MAAM,CAACC,KAAK,EAAEC,QAAQ,CAAC,GAAGP,QAAQ,CAAC,EAAE,CAAC;EACtC,MAAM,CAACQ,aAAa,EAAEC,gBAAgB,CAAC,GAAGT,QAAQ,CAAC,EAAE,CAAC;EACtD,MAAM,CAACU,OAAO,EAAEC,UAAU,CAAC,GAAGX,QAAQ,CAAC,KAAK,CAAC;EAC7C,MAAM,CAACY,QAAQ,EAAEC,WAAW,CAAC,GAAGb,QAAQ,CAAC,EAAE,CAAC;EAE5C,MAAMc,UAAU,GAAG,MAAAA,CAAA,KAAY;IAC3B,IAAIR,KAAK,CAACS,IAAI,CAAC,CAAC,KAAK,EAAE,EAAE;MACvBF,WAAW,CAACG,WAAW,IAAI,CAAC,GAAGA,WAAW,EAAE;QAACC,IAAI,EAAE,MAAM;QAAEC,OAAO,EAAEZ;MAAK,CAAC,CAAC,CAAC;MAC5EG,gBAAgB,CAAC,EAAE,CAAC;MACpBE,UAAU,CAAC,IAAI,CAAC;MAChB,IAAIQ,gBAAgB,GAAG,CAAC,GAAGP,QAAQ,EAAE;QAACK,IAAI,EAAE,MAAM;QAAEC,OAAO,EAAEZ;MAAK,CAAC,CAAC,EAAC;MACrEC,QAAQ,CAAC,EAAE,CAAC;;MAEZ;MACA,MAAMa,QAAQ,GAAG,MAAMC,KAAK,CAAE,GAAEpB,GAAI,WAAU,EAAE;QAC9CqB,MAAM,EAAE,MAAM;QACdC,OAAO,EAAE;UACP,cAAc,EAAE;QAClB,CAAC;QACDC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAAC;UACnBC,IAAI,EAAER;QACR,CAAC;MACH,CAAC,CAAC;MACF,MAAMS,MAAM,GAAGR,QAAQ,CAACI,IAAI,CAACK,SAAS,CAAC,CAAC;MACxC,IAAIC,YAAY,GAAG,EAAE;MACrB,OAAO,IAAI,EAAE;QACX,MAAM;UAAEC,IAAI;UAAEC;QAAM,CAAC,GAAG,MAAMJ,MAAM,CAACK,IAAI,CAAC,CAAC;QAC3C,IAAIF,IAAI,EAAE;QACV,MAAMnB,QAAQ,GAAG,IAAIsB,WAAW,CAAC,OAAO,CAAC,CAACC,MAAM,CAACH,KAAK,CAAC;QACvDF,YAAY,IAAIlB,QAAQ;QACxBH,gBAAgB,CAACqB,YAAY,CAAC;MAChC;MACAjB,WAAW,CAACG,WAAW,IAAI,CAAC,GAAGA,WAAW,EAAE;QAACC,IAAI,EAAE,QAAQ;QAAEC,OAAO,EAAEY;MAAY,CAAC,CAAC,CAAC;MACrFnB,UAAU,CAAC,KAAK,CAAC;IACnB;IACA;EACF,CAAC;EAEH,oBACMR,OAAA;IAAKiC,SAAS,EAAC,gBAAgB;IAAAC,QAAA,gBAC3BlC,OAAA;MAAKiC,SAAS,EAAC,eAAe;MAAAC,QAAA,eAC5BlC,OAAA;QAAKiC,SAAS,EAAG,cAAa1B,OAAO,KAAK,KAAK,GAAG,OAAO,GAAG,MAAO;MAAE;QAAA4B,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAM;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACzE,CAAC,eACNtC,OAAA;MAAKiC,SAAS,EAAC,gBAAgB;MAAAC,QAAA,EAC1B7B;IAAa;MAAA8B,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACb,CAAC,eACNtC,OAAA;MAAKiC,SAAS,EAAC,gBAAgB;MAAAC,QAAA,gBAC3BlC,OAAA;QAAOiC,SAAS,EAAC,YAAY;QACzBM,IAAI,EAAC,MAAM;QACXV,KAAK,EAAE1B,KAAM;QACbqC,WAAW,EAAC,aAAa;QACzBC,QAAQ,EAAEC,CAAC,IAAItC,QAAQ,CAACsC,CAAC,CAACC,MAAM,CAACd,KAAK,CAAE;QACxCe,UAAU,EAAEF,CAAC,IAAIA,CAAC,CAACG,GAAG,KAAK,OAAO,GAAGlC,UAAU,CAAC,CAAC,GAAG;MAAK;QAAAwB,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAC5D,CAAC,eACFtC,OAAA;QAAMiC,SAAS,EAAC;MAAc;QAAAE,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAO,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACrC,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACL,CAAC;AAEhB,CAAC;AAAApC,EAAA,CA3DKD,QAAQ;AAAA6C,EAAA,GAAR7C,QAAQ;AA4Dd,eAAeA,QAAQ;AAAC,IAAA6C,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}