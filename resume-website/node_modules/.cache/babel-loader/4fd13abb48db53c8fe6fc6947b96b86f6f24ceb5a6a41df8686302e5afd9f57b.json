{"ast":null,"code":"var _jsxFileName = \"/Users/santiagohernandez/resume/resume-website/src/chat/ChatPage.js\",\n  _s = $RefreshSig$();\nimport { useState, useEffect } from \"react\";\nimport { URL } from \"../constants\";\nimport \"./ChatPage.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ChatPage = () => {\n  _s();\n  const [input, setInput] = useState(\"\");\n  const [returnMessage, setReturnMessage] = useState(\"\");\n  const [talking, setTalking] = useState(false);\n  const [messages, setMessages] = [];\n  const handleSend = async () => {\n    if (input.trim() !== '') {\n      setMessages(prevMessage => [...prevMessage]);\n      setReturnMessage(\"\");\n      setTalking(true);\n      setInput('');\n\n      // Stream AI's message\n      const response = await fetch(`${URL}/api/talk`, {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          Body: input\n        })\n      });\n      const reader = response.body.getReader();\n      let incomingText = \"\";\n      while (true) {\n        const {\n          done,\n          value\n        } = await reader.read();\n        if (done) break;\n        const messages = new TextDecoder('utf-8').decode(value);\n        incomingText += messages;\n        setReturnMessage(incomingText);\n      }\n      setTalking(false);\n    }\n    return;\n  };\n\n  // useEffect(() => {\n  //   // Starting the timer\n  //   console.log(loading)\n  //   let timer\n  //   if(loading === true){\n  //     console.log(\"STARTED\")\n  //     timer = setInterval(() => {\n  //       setTalking(!talking);  // updating the state\n  //     }, 150); \n  //   } else {\n  //     console.log(\"ENDED\")\n  //     timer = () => clearInterval(timer);\n  //   }\n  // }, [loading])\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"chat-page\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"chat-interface\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"chat-send-form\",\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          className: \"chat-input\",\n          type: \"text\",\n          value: input,\n          placeholder: \"Ask away...\",\n          onChange: e => setInput(e.target.value),\n          onKeyPress: e => e.key === 'Enter' ? handleSend() : null\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 61,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"send-button \"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 68,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: `skull-head-${talking === false ? \"close\" : \"open\"}`\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"return-message\",\n        children: returnMessage\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 58,\n    columnNumber: 9\n  }, this);\n};\n_s(ChatPage, \"ZUfi1ULedlAbNSYLCcxekfIYCCg=\");\n_c = ChatPage;\nexport default ChatPage;\nvar _c;\n$RefreshReg$(_c, \"ChatPage\");","map":{"version":3,"names":["useState","useEffect","URL","jsxDEV","_jsxDEV","ChatPage","_s","input","setInput","returnMessage","setReturnMessage","talking","setTalking","messages","setMessages","handleSend","trim","prevMessage","response","fetch","method","headers","body","JSON","stringify","Body","reader","getReader","incomingText","done","value","read","TextDecoder","decode","className","children","type","placeholder","onChange","e","target","onKeyPress","key","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/santiagohernandez/resume/resume-website/src/chat/ChatPage.js"],"sourcesContent":["import { useState, useEffect } from \"react\"\nimport { URL } from \"../constants\"\nimport \"./ChatPage.css\"\n\nconst ChatPage = () => {\n    const [input, setInput] = useState(\"\")\n    const [returnMessage, setReturnMessage] = useState(\"\")\n    const [talking, setTalking] = useState(false)\n    const [messages, setMessages] = ([])\n\n    const handleSend = async () => {        \n        if (input.trim() !== '') {\n          setMessages(prevMessage => [...prevMessage])\n          setReturnMessage(\"\")\n          setTalking(true)\n          setInput('');\n          \n          // Stream AI's message\n          const response = await fetch(`${URL}/api/talk`, {\n            method: 'POST',\n            headers: {\n              'Content-Type': 'application/json',\n            },\n            body: JSON.stringify({\n              Body: input\n            }),\n          })\n          const reader = response.body.getReader();\n          let incomingText = \"\"\n          while (true) {\n            const { done, value } = await reader.read();\n            if (done) break;\n            const messages = new TextDecoder('utf-8').decode(value);\n            incomingText += messages\n            setReturnMessage(incomingText)\n          }\n          setTalking(false);\n        }\n        return\n      }\n    \n    // useEffect(() => {\n    //   // Starting the timer\n    //   console.log(loading)\n    //   let timer\n    //   if(loading === true){\n    //     console.log(\"STARTED\")\n    //     timer = setInterval(() => {\n    //       setTalking(!talking);  // updating the state\n    //     }, 150); \n    //   } else {\n    //     console.log(\"ENDED\")\n    //     timer = () => clearInterval(timer);\n    //   }\n    // }, [loading])\n\n    return(\n        <div className=\"chat-page\">\n            <div className=\"chat-interface\">\n                <div className=\"chat-send-form\">\n                    <input className=\"chat-input\"\n                        type=\"text\"\n                        value={input}\n                        placeholder=\"Ask away...\"\n                        onChange={e => setInput(e.target.value)}\n                        onKeyPress={e => e.key === 'Enter' ? handleSend() : null}\n                    />\n                    <span className=\"send-button \"></span>\n                </div>\n                <div className={`skull-head-${talking === false ? \"close\" : \"open\"}`}></div>\n                <div className=\"return-message\">\n                    {returnMessage}\n                </div>\n            </div>\n        </div>\n    )\n}\nexport default ChatPage;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}